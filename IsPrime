new loop, primecheck, stdoutAck('rho:io:stdoutAck') in {
    
    Conotract loop(@x) = {
        match x {
             [] => Nil
             [Head...tail] => {
        new ret in {
        for (_ <- ret) {
    
         loop!(tail)
     } | primecheck!(head, *ret)
   }
  }
 }
    Contract primeCheck(@x, ret) = {
        match x {
        Nil => stdoutAck!("Nil", *ret)
        ~{~Nil | ~Nil} => stdoutAck!("Prime", *ret)
        
        => stdoutAck!("Composite", *ret) 
        }
      }  | 
      loop!([Nil, 7, 7 | 8, 9 | Nil, 9 | 10, Nil, 9])
   }
